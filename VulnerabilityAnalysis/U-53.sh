#!/bin/bash

. function.sh

LOGFILE=$(MAKE_LOGFILE)

BAR
CODE [U-53] 사용자 shell 점검
cat << EOF >> $RESULT
[취약]: 로그인이 필요하지 않은 계정에 /bin/false(nologin) 쉘이 부여되어 있는 경우
[양호]: 로그인이 필요하지 않은 계정에 /bin/false(nologin) 쉘이 부여되지 않은 경우
EOF
BAR

# 1) 점검할 부분
# * UID: 1 ~ 999 -> /sbin/nologin, "", /sbin/shutdown, /bin/false, ...
# * UID: 1000 ~ 60000 -> sh, ksh, csh, tcsh, zsh, bash(/etc/shells)
# * UID: 60001 ~ 65535 -> /sbin/nologin

USERFILE=/etc/passwd
SHELLSFILE=/etc/shells

CONVERT_SHELL_LIST() {

FIRST=1
for SHELLTYPE in $(cat $SHELLSFILE)
do
    if [ $FIRST = 1 ] ; then
        TOTALSHELL=$SHELLTYPE
        FIRST=0
    else
        TOTALSHELL="$TOTALSHELL|$SHELLTYPE"
    fi
done
echo $TOTALSHELL
}

awk -F: '$3 >= 1 && $3 <= 999 || $3 >= 60001 && $3 <= 65535 {print $1, $7}' $USERFILE | \
while read SARAM CHKSHELL
do
    if echo $CHKSHELL | egrep -q "$(CONVERT_SHELL_LIST)" ; then
        echo "[ WARN ] $SARAM - $CHKSHELL" >> $LOGFILE
    else
        echo "[  OK  ] $SARAM - $CHKSHELL" >> $LOGFILE
    fi
done

if grep -qw '[ WARN ]' $LOGFILE ; then
    VUL "로그인이 필요하지 않은 계정에 /bin/false(nologin) 쉘이 부여되어 있는 경우"
    INFO "$LOGFILE 참고해 주세요."
else
    OK "로그인이 필요하지 않은 계정에 /bin/false(nologin) 쉘이 부여되지 않은 경우"
fi

cat $RESULT

